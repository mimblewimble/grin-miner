# Sample Server Configuration File for Grin-Miner
#
# Grin-Miner will look for this file in these places: in the following
# order:
#
# -The working directory
# -The directory in which the executable resides

#########################################
### LOGGING CONFIGURATION             ###
#########################################

[logging]

# Whether to log to stdout
log_to_stdout = true

# Log level for stdout: Critical, Error, Warning, Info, Debug, Trace
stdout_log_level = "Info"

# Whether to log to a file
log_to_file = true

# Log level for file: Critical, Error, Warning, Info, Debug, Trace
file_log_level = "Debug"

# Log file path
log_file_path = "grin-miner.log"

# Whether to append to the log file (true), or replace it on every run (false)
log_file_append = true

#########################################
### MINING CLIENT CONFIGURATION       ###
#########################################

[mining]

# whether to run the tui
run_tui = true

# listening grin stratum server url
stratum_server_addr = "127.0.0.1:13416"

# login for the stratum server (if required)
#stratum_server_login = "http://192.168.1.100:13415"

# password for the stratum server (if required)
#stratum_server_password = "x"

# whether tls is enabled for the stratum server
stratum_server_tls_enabled = false

#The directory in which mining plugins are installed
#if not specified, grin miner will look in the directory /deps relative
#to the executable

#miner_plugin_dir = "target/debug/plugins"

#################################################
### CUCK(AT)(AR)OO MINER PLUGIN CONFIGURATION ###
#################################################

# Multiple plugins can be specified, (e.g. a cpu
# miner and a gpu miner running in parallel)
# Use a single plugin instance per device, as 
# demonstrated below

# Multiple instances of the same plugin can be loaded
# and used with different devices. On CPU plugins
# you'll likely only be using a single instance
# but in CUDA plugins the device number can be set
# corresponding to the device ID. (use nvidia-smi to find this)

### CUCKATOO CPU SOLVERS

### cuckatoo_mean_compat_cpu
# The fastest cpu algorithm, but consumes the most memory

[[mining.miner_plugin_config]]
plugin_name = "cuckatoo_mean_compat_cpu_30"
[mining.miner_plugin_config.parameters]
nthreads = 4
cpuload = 1

### cuckatoo_mean_avx2_cpu
# As above, but for processors supporting avx2
# To build and use this plugin, make sure the following build feature
# is enabled in Cargo.toml:
# cuckoo_miner = { path = "./cuckoo-miner", features = ["build-mean-avx2"]}

#[[mining.miner_plugin_config]]
#plugin_name = "cuckatoo_mean_avx2_cpu_30"
#[mining.miner_plugin_config.parameters]
#nthreads = 4
#cpuload = 1

### cuckatoo_lean_cpu
# Low memory requirements, but very slow

#[[mining.miner_plugin_config]]
#plugin_name = "cuckatoo_lean_cpu_30"
#[mining.miner_plugin_config.parameters]
#nthreads = 4

# CUCKAROO CUDA SOLVERS
#
# These plugins are not built by default. To build:
#1) Ensure the latest cuda toolkit is installed
#   (nvcc should be in your PATH)
#   Wrong gcc? install gcc-5 g++-5; export CC=`which gcc-5`; # then build
#2) Ensure the 'build-cuda-plugin' feature is included in Cargo.toml, e.g:
#   cuckoo_miner = { path = "./cuckoo-miner", features = ["build-cuda-plugins"]}
#
# Parameters can be set individually for each device by using multiple 
# instance of each plugin.  device 0 is used by default
#

### mean cuda miner
# The fastest cuda solver. If you're getting 'out of memory' errors 
# when trying to run this solver, increase the 'expand' parameter
# by 1, and try again. This should work on 6 GB + Cards using
# the expand parameter, 8GB+ withoug

#[[mining.miner_plugin_config]]
#plugin_name = "cuckaroo_mean_cuda_29"

#[mining.miner_plugin_config.parameters]
#device = 0
#ntrims = 68
#expand = 0
#genablocks = 4096
#genatpb = 256
#genbtpb = 128
#trimtpb = 512
#tailtpb = 1024
#recoverblocks = 1024
#recovertpb = 1024

# e.g. To enable multiple devices (copy params from above as needed)

#[[mining.miner_plugin_config]]
#plugin_name = "cuckaroo_mean_cuda_29"
#[mining.miner_plugin_config.parameters]
#device = 1

### lean cuda miner
# much slower cuda solver, but should be usable on low-memory cards
#[[mining.miner_plugin_config]]
#plugin_name = "cuckaroo_lean_cuda_29"
#device = 0
#blocks = 128
#tpb = 128
